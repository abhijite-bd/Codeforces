// /*
// ███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ███████████████████████████████████████            ████             ████   ███████   ██████████████████████████████████████████
// ████████████████████████████████████████████████   ████   ███████   ████   ███████   ██████████████████████████████████████████
// ████████████████████████████████████████████████   ████   ███████   ████   ███████   ██████████████████████████████████████████
// ████████████████████████████████████████████████   ████   ███████   ████             ██████████████████████████████████████████
// ███████████████████████████████████████  ███████   ████   ███████   █████████   ███████████████████████████████████████████████
// ███████████████████████████████████████  ███████   ████   ███████   █████████   ███████████████████████████████████████████████
// ███████████████████████████████████████            ████             █████████   ███████████████████████████████████████████████
// ███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ███████████████████████            ████   █████████   ████             ████            ████             ███████████████████████
// ███████████████████████   █████████████   █████████   ████   ███████   ████   █████████████   █████████████████████████████████
// ███████████████████████   █████████████   █████████   ████   ███████   ████   █████████████   █████████████████████████████████
// ███████████████████████            ████               ████             ████           █████            ████████████████████████
// ████████████████████████████████   ████   █████████   ████   ████   ███████   █████████████   █████████████████████████████████
// ████████████████████████████████   ████   █████████   ████   ██████   █████   █████████████   █████████████████████████████████
// ███████████████████████            ████   █████████   ████   ███████   ████            ████             ███████████████████████
// ███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ███████████   █████   ████             ████   ████            ████   ████████   ████      ██████   ████              ██████████
// ███████████   ████   █████   ███████   ████   ████   █████████████   ████████   ████   █   █████   ████   ████████   ██████████
// ███████████   ███   ██████   ███████   ████   ████   █████████████   ████████   ████   ██   ████   ████   ████████   ██████████
// ███████████        ███████             ████   ████            ████              ████   ███   ███   ████              ██████████
// ███████████   ███   ██████   ████   ███████   █████████████   ████   ████████   ████   ████   ██   ████   ████████   ██████████
// ███████████   ████   █████   ██████   █████   █████████████   ████   ████████   ████   █████   █   ████   ████████   ██████████
// ███████████   █████   ████   ███████   ████   ████            ████   ████████   ████   ██████      ████   ████████   ██████████
// ███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
// █████              ████             ████   █████████   ████   ████             ████   ████               ████             █████
// █████   ████████   ████   ████████  ████   █████████   ████   ██████████████   ████   ██████████   ██████████   ███████████████
// █████   ████████   ████   ████████  ████   █████████   ████   ██████████████   ████   ██████████   ██████████   ███████████████
// █████              ████             ████               ████   ██████████████   ████   ██████████   ██████████            ██████
// █████   ████████   ████   ████████  ████   █████████   ████   ████   ███████   ████   ██████████   ██████████   ███████████████
// █████   ████████   ████   ████████  ████   █████████   ████   ████   ███████   ████   ██████████   ██████████   ███████████████
// █████   ████████   ████             ████   █████████   ████   ████             ████   ██████████   ██████████             █████
// ███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
// */
// #include <bits/stdc++.h>
// #define ll long long int
// #define gcd(a, b) __gcd(a, b)
// #define lcm(a, b) (a * b) / gcd(a, b)
// #define ss ' '
// #define fast()                    \
//     ios_base::sync_with_stdio(0); \
//     cin.tie(NULL);                \
//     cout.tie(NULL)
// #define max3(a, b, c) max(max(a, b), c)
// #define min3(a, b, c) min(min(a, b), c)
// #define pb push_back
// #define all(v) v.begin(), v.end()
// #define allr(v) v.rbegin(), v.rend()
// #define endl '\n'
// #define pi 3.14159265359
// using namespace std;
// int main()
// {
//     ll t, a, b, c, d, s, i, j, k;
//     cin >> t;
//     while (t--)
//     {
//         cin >> a >> b >> s;
//         ll ans = 0;
//         for (i = 0; i < min(a, s / b); i++)
//         {
//             ans += b * b;
//         }
//         //cout<<i<<endl;
//         if (s % b != 0 and i!=a)
//             ans += pow(s % b, 2);
//         cout << ans << endl;
//     }
//     return 0;
// }
#include<iostream>
using namespace std;
int main()
{
    long long t;
    cin>>t;
    while(t--)
    {
        long long  tm,mn,sn,x,y,sum=0;
        cin>>tm>>mn>>sn;
        x=sn%mn;
        y=sn/mn;
        if(y<tm)
        {
            for(long long i=1;i<=y;i++)
            {
                sum=sum+(mn*mn);
            }
            cout<<sum+(x*x)<<endl;
        }
        else
        {
            for(long long i=1;i<=tm;i++)
            {
                sum=sum+(mn*mn);
            }
            cout<<sum<<endl;
        }

    }
}